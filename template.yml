AWSTemplateFormatVersion: 2010-09-09
Description: >-
  auth
Transform:
- AWS::Serverless-2016-10-31
Resources:

  SetupCode:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/workerSetup/main.main
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: GET Setup Workers 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WorkerTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref WorkerTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workerSetup
            Method: POST

  getAuthCode:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/auth/getAuthCode.getAuthCode
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: GET AUTH CODE AND REPLACE NEW ONE 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref AuthTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /getAuthCode
            Method: POST

  getNewsfeed:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/newsfeed/get-newsfeed.getNewsfeed
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: GET DATA FOR NEWSFEED
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref NewsFeedTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref NewsFeedTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /newsfeed/{workspaceid}
            Method: GET

  postNewsfeed:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/newsfeed/post-newsfeed.postNewsfeed
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: POST DATA FOR NEWSFEED
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref NewsFeedTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref NewsFeedTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /newsfeed/{workspaceid}
            Method: POST

  addTask:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/mytasks/addTask.addTask
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: ASSIGN NEW TASK 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CurrentTaskTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref CurrentTaskTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /addTask
            Method: POST

  myTaskAll:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/mytasks/myTaskAll.myTaskAll
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Take all tasks
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CurrentTaskTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref CurrentTaskTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /task/{workspaceid}
            Method: POST

  myTaskDetail:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/mytasks/myTaskDetail.myTaskDetail
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Take all tasks
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CurrentTaskTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref CurrentTaskTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /task/{workspaceid}
            Method: POST

  submitReport:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/report/submitReport.submitReport
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: ADD New Report
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CurrentTaskTable
        - DynamoDBCrudPolicy:
            TableName: !Ref OldTaskTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref CurrentTaskTable
          SAMPLE_TABLE_TWO: !Ref OldTaskTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /task/{workspaceid}
            Method: POST

  getHistory:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/oldtasks/getHistory.getHistory
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Get Old Tasks
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OldTaskTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref OldTaskTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /task/{workspaceid}
            Method: POST

  AuthTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: AuthTableT
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  CurrentTaskTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: currentTask
      PrimaryKey:
        Name: taskId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  
  OldTaskTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: oldTask
      PrimaryKey:
        Name: taskId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  WorkerTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: WorkerTable
      PrimaryKey:
        Name: workerId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  NewsFeedTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: NewsfeedTableT
      PrimaryKey:
        Name: postId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2